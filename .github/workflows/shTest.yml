name: Test Django Setup

on: [push, pull_request]

jobs:
  test-setup:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv

    - name: Run setup script
      run: |
        chmod +x setup.sh
        ./setup.sh

    - name: Verify file structure
      run: |
        ls -la
        ls db.sqlite3 .env .flake8 main/ manage.py Pipfile* pytest.ini static/ requirements.txt

    - name: Check server health
      run: |
        # Démarrer le serveur en arrière-plan
        pipenv run python manage.py runserver 0.0.0.0:8000 > server.log 2>&1 &
        SERVER_PID=$!
        
        # Attendre le démarrage
        sleep 15
        
        # Vérifier l'accès à l'admin
        curl -Lfs -o /dev/null -w "%{http_code}" http://localhost:8000/admin/ | grep 200
        curl -Ls http://localhost:8000/admin/ | grep "Django administration"
        
        # Arrêter le serveur
        kill $SERVER_PID
        
        # Vérifier les logs d'erreur
        ! grep -q "Error" server.log

    - name: Test database migration
      run: |
        pipenv run python manage.py makemigrations --check --dry-run
        pipenv run python manage.py check